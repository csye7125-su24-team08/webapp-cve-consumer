# Use a multi-stage build to reduce the final image size
# Stage 1: Build the Go application
FROM golang:1.22.3 AS builder

WORKDIR /app

# Copy go.mod and go.sum files first to leverage Docker cache
COPY ./cve-consumer/go.mod ./cve-consumer/go.sum ./
RUN go mod download

# Copy the source code
COPY ./cve-consumer/*.go ./

# Build the Go application
RUN CGO_ENABLED=0 go build -o /webapp

# Stage 2: Create the final image with a minimal base image
FROM alpine:latest

# Set working directory
WORKDIR /app

# Copy the built binary from the builder stage
COPY --from=builder /webapp /webapp

# Expose port for http probes
EXPOSE 8080

# Command to run the application
CMD ["/webapp"]
