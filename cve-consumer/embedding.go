package main

import (
	"context"
	"strings"

	"github.com/rs/zerolog/log"
	"github.com/sashabaranov/go-openai"
)

// getEmbedding simulates an API call to get the embedding for a CVE description
func getEmbedding(cveDescription string) ([]float32, error) {

	openaiAPIKey := getEnvWithoutDefaults("OPENAI_API_KEY")
	openaiAPIKeyWithoutNewLines := strings.ReplaceAll(openaiAPIKey, "\n", "")
	client := openai.NewClient(openaiAPIKeyWithoutNewLines)

	resp, err := client.CreateEmbeddings(
		context.Background(),
		openai.EmbeddingRequest{
			Input: []string{cveDescription},
			Model: openai.AdaEmbeddingV2,
		})

	if err != nil {
		log.Error().Err(err).Msg("failed to get embedding")
		return nil, err
	}

	vectors := resp.Data[0].Embedding
	return vectors, nil
}
